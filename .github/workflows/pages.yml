name: Docs
on:
  pull_request:
  push:
    branches:
      - main
  merge_group:
  workflow_dispatch:
jobs:
  build-docs:
    runs-on: ubuntu-latest
    name: Build HTML docs
    steps:
      - uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - run: make install
      - run: make docs
      - uses: actions/upload-artifact@v4
        with:
          name: html-docs
          path: "./docs/_build/html/"
  build-docs-pdf:
    runs-on: ubuntu-latest
    name: Build PDF docs
    steps:
      - uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - run: make install
      - name: Generate LaTeX files
        run: make docs-latex || echo "LaTeX build completed with warnings, continuingâ€¦"
      - name: Compile LaTeX document
        continue-on-error: true
        uses: xu-cheng/latex-action@v4
        with:
          texlive_version: latest
          os: debian
          pre_compile: |
            set -euo pipefail
            apt-get update -y
            apt-get install -y build-essential wget tar
            LATEST_URL=$(wget -qO- https://api.github.com/repos/ArtifexSoftware/ghostpdl-downloads/releases/latest | grep "browser_download_url.*ghostscript-[0-9].*tar.gz" | cut -d '"' -f 4 | head -n 1)
            wget "$LATEST_URL" -O ghostscript.tar.gz
            tar xzf ghostscript.tar.gz
            cd ghostscript-*
            ./configure --prefix="$(pwd)/ghostscript-install"
            make
            make install
            export PATH="$(pwd)/ghostscript-install/bin:$PATH"
            cd ../docs/_build/latex
          root_file: qpdk.tex
          compiler: latexmk
          continue_on_error: true
          latexmk_use_xelatex: true
          args: -pdfxe -xelatex -interaction=nonstopmode -f -file-line-error
      - name: DEBUG
        run: |
          ls -alh ./docs/_build/latex/
      - uses: actions/upload-artifact@v4
        with:
          name: pdf-docs
          path: "./docs/_build/latex/qpdk.pdf"
  deploy-docs:
    runs-on: ubuntu-latest
    name: Deploy to GitHub Pages
    needs: [build-docs, build-docs-pdf]
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download HTML & PDF artifact
        uses: actions/download-artifact@v5
        with:
          pattern: "*-docs"
          path: _site
          merge-multiple: true
      - name: Upload merged pages artifact
        uses: actions/upload-pages-artifact@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
